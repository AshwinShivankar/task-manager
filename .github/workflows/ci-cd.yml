name: CI/CD Pipeline

on:
  push:
    branches: [main]

env:
  DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies and run tests (Backend)
        working-directory: ./backend
        run: |
          npm install
          npm test

      - name: Install dependencies (Frontend)
        working-directory: ./frontend
        run: |
          npm install

      - name: Build Docker images
        run: |
          docker build -t $DOCKERHUB_USERNAME/backend ./backend
          docker build -t $DOCKERHUB_USERNAME/frontend ./frontend

      - name: Push images to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push $DOCKERHUB_USERNAME/backend
          docker push $DOCKERHUB_USERNAME/frontend

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull $DOCKERHUB_USERNAME/backend
            docker pull $DOCKERHUB_USERNAME/frontend
            docker stop backend || true
            docker stop frontend || true
            docker rm backend || true
            docker rm frontend || true
            docker run -d -p 5000:5000 --name backend $DOCKERHUB_USERNAME/backend
            docker run -d -p 80:80 --name frontend $DOCKERHUB_USERNAME/frontend
