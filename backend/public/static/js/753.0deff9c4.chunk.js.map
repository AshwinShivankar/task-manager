{"version":3,"file":"static/js/753.0deff9c4.chunk.js","mappings":"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","sources":["components/TaskItem.js","components/TaskForm.js","components/TaskModal.js","components/TaskList.js","utils/api.js"],"sourcesContent":["// src/components/TaskItem.js\r\nimport React from \"react\";\r\n\r\nconst TaskItem = ({ task, onToggleComplete, onDelete, onOpenModal }) => {\r\n  return (\r\n    <div\r\n      className={`task-row ${task.completed ? \"completed\" : \"\"}`}\r\n      onClick={() => onOpenModal(task)}\r\n    >\r\n      <div className=\"task-name-cell\">{task.title}</div>\r\n      <div className=\"task-status-cell\">\r\n        <span\r\n          className={`status-badge ${\r\n            task.completed ? \"status-completed\" : \"status-pending\"\r\n          }`}\r\n        >\r\n          {task.completed ? \"Completed\" : \"Pending\"}\r\n        </span>\r\n      </div>\r\n      <div className=\"task-actions-cell\">\r\n        <button\r\n          className=\"delete-btn\"\r\n          onClick={(e) => {\r\n            e.stopPropagation(); // Prevent modal from opening\r\n            onDelete(task.id);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","// src/components/TaskForm.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst TaskForm = ({ onAddTask }) => {\r\n  const [task, setTask] = useState({ title: \"\", description: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTask((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!task.title.trim()) return;\r\n\r\n    onAddTask(task);\r\n    setTask({ title: \"\", description: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form\">\r\n      <h3>Add New Task</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={task.title}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Description (optional)</label>\r\n          <textarea\r\n            name=\"description\"\r\n            value={task.description}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn-primary\">\r\n          Add Task\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","// src/components/TaskModal.js\r\nimport React from \"react\";\r\n\r\nconst TaskModal = ({ task, onClose, onToggleComplete, onDelete }) => {\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{task.title}</h2>\r\n          <button className=\"close-btn\" onClick={onClose}>\r\n            Ã—\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal-body\">\r\n          <h3>Description:</h3>\r\n          <p className=\"task-description\">\r\n            {task.description ? task.description : \"No description provided.\"}\r\n          </p>\r\n\r\n          <div className=\"task-metadata\">\r\n            <p>Created: {new Date(task.createdAt).toLocaleString()}</p>\r\n            {task.updatedAt && (\r\n              <p>Last Updated: {new Date(task.updatedAt).toLocaleString()}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            className={`complete-btn ${task.completed ? \"incomplete-btn\" : \"\"}`}\r\n            onClick={() => {\r\n              onToggleComplete(task.id, !task.completed);\r\n              onClose();\r\n            }}\r\n          >\r\n            {task.completed ? \"Mark as Incomplete\" : \"Mark as Complete\"}\r\n          </button>\r\n\r\n          <button className=\"delete-btn\" onClick={() => onDelete(task.id)}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskModal;\r\n","// src/components/TaskList.js\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport api from \"../utils/api\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport TaskModal from \"./TaskModal\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const { auth, logout } = useContext(AuthContext);\r\n\r\n  // Fetch tasks when component mounts\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get(\"/api/tasks\");\r\n      setTasks(response.data);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        logout();\r\n      } else {\r\n        setError(\"Failed to fetch tasks\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addTask = async (newTask) => {\r\n    try {\r\n      const response = await api.post(\"/api/tasks\", newTask);\r\n      setTasks((prev) => [...prev, response.data]);\r\n      toast.success(\"Task added successfully!\");\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        logout();\r\n      } else {\r\n        setError(\"Failed to add task\");\r\n        toast.error(\"Failed to add task\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleComplete = async (id, completed) => {\r\n    try {\r\n      const response = await api.put(`/api/tasks/${id}`, { completed });\r\n      setTasks((prev) =>\r\n        prev.map((task) => (task.id === id ? response.data : task))\r\n      );\r\n      toast.success(`Task marked as ${completed ? \"completed\" : \"incomplete\"}`);\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        logout();\r\n      } else {\r\n        setError(\"Failed to update task\");\r\n        toast.error(\"Failed to update task\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await api.delete(`/api/tasks/${id}`);\r\n      setTasks((prev) => prev.filter((task) => task.id !== id));\r\n      toast.success(\"Task deleted successfully!\");\r\n      setIsModalOpen(false);\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        logout();\r\n      } else {\r\n        setError(\"Failed to delete task\");\r\n        toast.error(\"Failed to delete task\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const openTaskModal = (task) => {\r\n    setSelectedTask(task);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeTaskModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading tasks...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list-container\">\r\n      <h2>Your Tasks</h2>\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      <TaskForm onAddTask={addTask} />\r\n\r\n      <div className=\"task-table\">\r\n        <div className=\"task-table-header\">\r\n          <div className=\"task-name-column\">Task</div>\r\n          <div className=\"task-status-column\">Status</div>\r\n          <div className=\"task-actions-column\">Actions</div>\r\n        </div>\r\n\r\n        {tasks.length === 0 ? (\r\n          <div className=\"no-tasks\">\r\n            No tasks yet. Add a new task to get started!\r\n          </div>\r\n        ) : (\r\n          <div className=\"task-table-body\">\r\n            {tasks.map((task) => (\r\n              <TaskItem\r\n                key={task.id}\r\n                task={task}\r\n                onToggleComplete={toggleComplete}\r\n                onDelete={deleteTask}\r\n                onOpenModal={openTaskModal}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isModalOpen && selectedTask && (\r\n        <TaskModal\r\n          task={selectedTask}\r\n          onClose={closeTaskModal}\r\n          onToggleComplete={toggleComplete}\r\n          onDelete={deleteTask}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","// src/utils/api.js\r\nimport axios from \"axios\";\r\n\r\n// const BASE_URL = \"http://localhost:5000\";\r\nconst BASE_URL = \"https://task-manager-production-1bb3.up.railway.app\";\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n// Add a request interceptor to include token in headers\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default api;\r\n"],"names":["_ref","task","onToggleComplete","onDelete","onOpenModal","_jsxs","className","completed","onClick","children","_jsx","title","e","stopPropagation","id","onAddTask","setTask","useState","description","handleChange","name","value","target","prev","onSubmit","preventDefault","trim","type","onChange","required","onClose","Date","createdAt","toLocaleString","updatedAt","TaskList","tasks","setTasks","loading","setLoading","error","setError","selectedTask","setSelectedTask","isModalOpen","setIsModalOpen","auth","logout","useContext","AuthContext","useEffect","fetchTasks","async","response","api","get","data","err","_err$response","status","toggleComplete","put","map","toast","success","_err$response3","deleteTask","delete","filter","_err$response4","openTaskModal","TaskForm","post","newTask","_err$response2","length","TaskItem","TaskModal","closeTaskModal","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Promise","reject"],"sourceRoot":""}