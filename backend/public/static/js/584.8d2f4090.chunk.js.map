{"version":3,"file":"static/js/584.8d2f4090.chunk.js","mappings":"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","sources":["components/Login.js","utils/api.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport api from \"../utils/api\";\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isRegister, setIsRegister] = useState(false); // still keeping the toggle here\r\n  const { setAuth } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const endpoint = isRegister ? \"/api/auth/register\" : \"/api/auth/login\";\r\n\r\n      if (isRegister) {\r\n        await api.post(endpoint, credentials);\r\n        setIsRegister(false);\r\n        setError(\"Registration successful! Please login.\");\r\n        setCredentials({ username: \"\", password: \"\" });\r\n      } else {\r\n        const response = await api.post(endpoint, credentials);\r\n\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n\r\n        setAuth({\r\n          token: response.data.token,\r\n          user: response.data.user,\r\n          isAuthenticated: true,\r\n        });\r\n\r\n        navigate(\"/tasks\");\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Something went wrong\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`auth-container ${loading ? \"loading\" : \"\"}`}>\r\n      <h2>{isRegister ? \"Register\" : \"Login\"}</h2>\r\n\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={credentials.username}\r\n            onChange={handleChange}\r\n            required\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={credentials.password}\r\n            onChange={handleChange}\r\n            required\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn-primary\" disabled={loading}>\r\n          {loading ? (\r\n            <div className=\"spinner\" />\r\n          ) : isRegister ? (\r\n            \"Register\"\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </button>\r\n      </form>\r\n      <hr></hr>\r\n      <p className=\"mt-4\">\r\n        {isRegister ? \"Already have an account?\" : \"Don't have an account?\"}{\" \"}\r\n        <Link\r\n          to=\"#\"\r\n          className=\"text-blue-500 underline cursor-pointer\"\r\n          onClick={(e) => {\r\n            e.preventDefault(); // prevent page jump\r\n            setIsRegister(!isRegister);\r\n          }}\r\n        >\r\n          {isRegister ? \"Login\" : \"Register\"}\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// src/utils/api.js\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000\";\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n// Add a request interceptor to include token in headers\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default api;\r\n"],"names":["Login","credentials","setCredentials","useState","username","password","error","setError","loading","setLoading","isRegister","setIsRegister","setAuth","useContext","AuthContext","navigate","useNavigate","handleChange","e","name","value","target","prev","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","endpoint","api","post","response","localStorage","setItem","data","token","JSON","stringify","user","isAuthenticated","err","_err$response","_err$response$data","message","type","onChange","required","disabled","Link","to","onClick","axios","create","baseURL","interceptors","request","use","config","getItem","headers","Promise","reject"],"sourceRoot":""}